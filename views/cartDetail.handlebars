<div class="container my-4">
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-shopping-cart"></i> Carrito: {{cart._id}}</h1>
    <a href="/" class="btn btn-outline-primary">
      <i class="fas fa-arrow-left"></i> Volver a productos
    </a>
  </div>

  {{#if cart.products.length}}
  <div class="row">
    {{#each cart.products}}
    <div class="col-md-6 col-lg-4 mb-4">
      <div class="card h-100">
        {{#if this.product.thumbnails}}
        {{#each this.product.thumbnails}}
        {{#if @first}}
        <img src="/{{this}}" alt="{{../product.title}}" class="card-img-top" style="height: 200px; object-fit: cover;"
          onerror="this.onerror=null;this.src='/img/no-image.jpeg';" />
        {{/if}}
        {{/each}}
        {{else}}
        <img src="/img/no-image.jpeg" alt="Sin imagen" class="card-img-top" style="height: 200px; object-fit: cover;" />
        {{/if}}

        <div class="card-body d-flex flex-column">
          <h5 class="card-title">{{this.product.title}}</h5>
          <p class="card-text">{{this.product.description}}</p>

          <div class="mt-auto">
            <ul class="list-group list-group-flush mb-3">
              <li class="list-group-item">
                <strong>Precio unitario:</strong> ${{this.product.price}}
              </li>
              <li class="list-group-item">
                <strong>Cantidad:</strong> {{this.quantity}}
              </li>
              <li class="list-group-item">
                <strong>Subtotal:</strong> ${{multiply this.product.price this.quantity}}
              </li>
            </ul>

            <div class="d-grid gap-2">
              <div class="input-group mb-2">
                <input type="number" class="form-control" id="quantity-{{this.product._id}}" value="{{this.quantity}}"
                  min="1">
                <button class="btn btn-outline-primary"
                  onclick="updateQuantity('{{../cart._id}}', '{{this.product._id}}')">
                  Actualizar
                </button>
              </div>
              <button class="btn btn-danger btn-sm" onclick="removeProduct('{{../cart._id}}', '{{this.product._id}}')">
                <i class="fas fa-trash"></i> Eliminar
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
    {{/each}}
  </div>

  <div class="card mt-4">
    <div class="card-body text-center">
      <h4>Total del carrito: ${{calculateTotal cart.products}}</h4>
      <button class="btn btn-warning btn-lg me-2" onclick="clearCart('{{cart._id}}')">
        <i class="fas fa-trash-alt"></i> Vaciar carrito
      </button>
      <button class="btn btn-success btn-lg">
        <i class="fas fa-credit-card"></i> Proceder al pago
      </button>
    </div>
  </div>
  {{else}}
  <div class="alert alert-info text-center">
    <h4><i class="fas fa-shopping-cart"></i> El carrito está vacío</h4>
    <p>Agrega algunos productos para empezar a comprar.</p>
    <a href="/" class="btn btn-primary">Ver productos</a>
  </div>
  {{/if}}
</div>

<script>
  function updateQuantity(cartId, productId) {
    const quantity = document.getElementById(`quantity-${productId}`).value;

    fetch(`/api/carts/${cartId}/products/${productId}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ quantity: parseInt(quantity) })
    })
      .then(response => response.json())
      .then(result => {
        if (result.status === 'success') {
          Swal.fire({
            icon: 'success',
            title: 'Cantidad actualizada',
            timer: 1500,
            showConfirmButton: false
          }).then(() => {
            window.location.reload();
          });
        } else {
          throw new Error(result.message);
        }
      })
      .catch(error => {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: error.message || 'Error al actualizar la cantidad'
        });
      });
  }

  function removeProduct(cartId, productId) {
    Swal.fire({
      title: '¿Estás seguro?',
      text: 'Se eliminará este producto del carrito',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Sí, eliminar',
      cancelButtonText: 'Cancelar'
    }).then((result) => {
      if (result.isConfirmed) {
        fetch(`/api/carts/${cartId}/products/${productId}`, {
          method: 'DELETE'
        })
          .then(response => response.json())
          .then(result => {
            if (result.status === 'success') {
              Swal.fire({
                icon: 'success',
                title: 'Producto eliminado',
                timer: 1500,
                showConfirmButton: false
              }).then(() => {
                window.location.reload();
              });
            } else {
              throw new Error(result.message);
            }
          })
          .catch(error => {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: error.message || 'Error al eliminar el producto'
            });
          });
      }
    });
  }

  function clearCart(cartId) {
    Swal.fire({
      title: '¿Estás seguro?',
      text: 'Se vaciarán todos los productos del carrito',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Sí, vaciar',
      cancelButtonText: 'Cancelar'
    }).then((result) => {
      if (result.isConfirmed) {
        fetch(`/api/carts/${cartId}`, {
          method: 'DELETE'
        })
          .then(response => response.json())
          .then(result => {
            if (result.status === 'success') {
              Swal.fire({
                icon: 'success',
                title: 'Carrito vaciado',
                timer: 1500,
                showConfirmButton: false
              }).then(() => {
                window.location.reload();
              });
            } else {
              throw new Error(result.message);
            }
          })
          .catch(error => {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: error.message || 'Error al vaciar el carrito'
            });
          });
      }
    });
  }
</script>